<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


    <!-- .......................................................................
    ... Indica que se utilizaran anotaciones para los beans de Spring
    ........................................................................ -->
    <context:annotation-config />

    <!-- .......................................................................
    ... Paquete base en donde se encuentran los beans de Spring
    ........................................................................ -->
    <context:component-scan base-package="gt.usac.ing.tic" />
    
    <!-- .......................................................................
    ... Indica que la configuracion para el manejo de transacciones se realiza
    ... por medio de anotaciones en las clases especificas. El bean encargado
    ... de controlar las transacciones es "transactionManager", el cual esta
    ... definido mas adelante en este archivo
    ........................................................................ -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <!-- .......................................................................
    ... Bean que crea la conexion con la base de datos por medio de JDBC
    ... este bean se utiliza cuando el Data Source se encuentra controlado
    ... por la misma aplicacion
    ........................................................................ -->
        
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/maticas01" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
	</bean>
    
    <!-- .......................................................................
    ... Bean de sesion para la base de datos, realiza la integracion con Hibernate
    ........................................................................ -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <!-- Tipo de lenguaje SQL que utiliza la base de datos -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!-- Muestra las consultas SQL realizadas por Hibernate -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
            </props>
        </property>
        <property name="configLocation">
            <value>classpath:META-INF/hibernate.cfg.xml</value>
        </property>
    </bean>
    
    <!-- .......................................................................
    ... Bean que controlara las transacciones en Hibernate
    ........................................................................ -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- .......................................................................
    ... Bean para manejar las excepciones a nivel de Hibernate
    ........................................................................ -->
    <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
</beans>